// Generated by view binder compiler. Do not edit!
package com.wanted.retocine.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.wanted.retocine.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMovieDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView IVPhotoMovieDetail;

  @NonNull
  public final TextView TVDirectorMovieDetail;

  @NonNull
  public final TextView TVNameMovieDetail;

  @NonNull
  public final TextView TVOverviewMovieDetail;

  @NonNull
  public final TextView TVReleaseDateMovieDetail;

  @NonNull
  public final TextView TVVoteAverageMovieDetail;

  private ActivityMovieDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView IVPhotoMovieDetail, @NonNull TextView TVDirectorMovieDetail,
      @NonNull TextView TVNameMovieDetail, @NonNull TextView TVOverviewMovieDetail,
      @NonNull TextView TVReleaseDateMovieDetail, @NonNull TextView TVVoteAverageMovieDetail) {
    this.rootView = rootView;
    this.IVPhotoMovieDetail = IVPhotoMovieDetail;
    this.TVDirectorMovieDetail = TVDirectorMovieDetail;
    this.TVNameMovieDetail = TVNameMovieDetail;
    this.TVOverviewMovieDetail = TVOverviewMovieDetail;
    this.TVReleaseDateMovieDetail = TVReleaseDateMovieDetail;
    this.TVVoteAverageMovieDetail = TVVoteAverageMovieDetail;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMovieDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMovieDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_movie_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMovieDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.IVPhotoMovieDetail;
      ImageView IVPhotoMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (IVPhotoMovieDetail == null) {
        break missingId;
      }

      id = R.id.TVDirectorMovieDetail;
      TextView TVDirectorMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (TVDirectorMovieDetail == null) {
        break missingId;
      }

      id = R.id.TVNameMovieDetail;
      TextView TVNameMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (TVNameMovieDetail == null) {
        break missingId;
      }

      id = R.id.TVOverviewMovieDetail;
      TextView TVOverviewMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (TVOverviewMovieDetail == null) {
        break missingId;
      }

      id = R.id.TVReleaseDateMovieDetail;
      TextView TVReleaseDateMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (TVReleaseDateMovieDetail == null) {
        break missingId;
      }

      id = R.id.TVVoteAverageMovieDetail;
      TextView TVVoteAverageMovieDetail = ViewBindings.findChildViewById(rootView, id);
      if (TVVoteAverageMovieDetail == null) {
        break missingId;
      }

      return new ActivityMovieDetailBinding((ConstraintLayout) rootView, IVPhotoMovieDetail,
          TVDirectorMovieDetail, TVNameMovieDetail, TVOverviewMovieDetail, TVReleaseDateMovieDetail,
          TVVoteAverageMovieDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
